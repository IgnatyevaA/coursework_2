from src.api import get_vacancies_from_hh
from src.vacancy import Vacancy
from src.savers import JSONSaver


def filter_vacancies_by_salary(vacancies, min_salary):
    return [
        vacancy for vacancy in vacancies
        if vacancy.salary_from is not None and vacancy.salary_from >= min_salary
    ]


def sort_vacancies_by_salary(vacancies):
    return sorted(vacancies, key=lambda v: v.salary_from or 0, reverse=True)


def get_top_vacancies(vacancies, top_n):
    return vacancies[:top_n]


def save_vacancies_to_json(vacancies, path="vacancies.json"):
    saver = JSONSaver(path)
    saver.save(vacancies)


def main():
    keyword = input("üîé –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π: ")
    num_vacancies = int(input("üìÑ –°–∫–æ–ª—å–∫–æ –≤–∞–∫–∞–Ω—Å–∏–π –∑–∞–≥—Ä—É–∑–∏—Ç—å? (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10): "))
    min_salary = int(input("üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: "))
    top_n = int(input("üèÜ –°–∫–æ–ª—å–∫–æ —Ç–æ–ø-–≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–∫–∞–∑–∞—Ç—å?: "))

    print("üì° –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π...")
    vacancies = get_vacancies_from_hh(keyword, num_vacancies)

    print("üìÇ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π –≤ JSON...")
    save_vacancies_to_json(vacancies)

    filtered = filter_vacancies_by_salary(vacancies, min_salary)
    sorted_vacancies = sort_vacancies_by_salary(filtered)
    top_vacancies = get_top_vacancies(sorted_vacancies, top_n)

    print(f"\nüéØ –¢–æ–ø-{top_n} –≤–∞–∫–∞–Ω—Å–∏–π:\n")
    for vacancy in top_vacancies:
        print(vacancy)
        print("-" * 40)


if __name__ == "__main__":
    main()
